{"version":3,"sources":["webpack:///./src/app/notifications/notifications.module.ts","webpack:///./src/app/notifications/notifications.page.html","webpack:///./src/app/notifications/notifications.page.scss","webpack:///./src/app/notifications/notifications.page.ts"],"names":[],"mappings":"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","file":"notifications-notifications-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\nimport {SharedModule} from '../shared.module';\nimport {TranslateModule} from '@ngx-translate/core';\nimport { NotificationsPage } from './notifications.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotificationsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,SharedModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    TranslateModule.forChild()\n  ],\n  declarations: [NotificationsPage]\n})\nexport class NotificationsPageModule {}\n","module.exports = \"<ion-header>\\n  <app-header\\n    [title]=\\\"'notifications.title' | translate\\\"\\n    [showMenu]=\\\"false\\\"\\n    [showBack]=\\\"true\\\"\\n    [isGoBack]=\\\"back\\\"\\n    [noBorder]=\\\"false\\\"\\n  ></app-header>\\n</ion-header>\\n<ion-content>\\n  <div *ngIf=\\\"!showSkeleton\\\">\\n    <ion-list class=\\\"noPadding\\\">\\n      <app-notification-card\\n        [notifications]=\\\"notifications\\\"\\n      ></app-notification-card>\\n    </ion-list>\\n    <div\\n      class=\\\"_flex-box _justify-content-center\\\"\\n      *ngIf=\\\"page * limit < totalCount\\\"\\n    >\\n      <ion-button expand=\\\"block\\\" class=\\\"loadMore\\\" (click)=\\\"loadMore()\\\">\\n        {{ \\\"button.loadMore\\\" | translate }}\\n      </ion-button>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"showSkeleton\\\">\\n    <ion-card *ngFor=\\\"let skeleton of skeletons\\\">\\n      <ion-card-header>\\n        <ion-skeleton-text animated style=\\\"width: 100%\\\"></ion-skeleton-text>\\n      </ion-card-header>\\n      <ion-card-content class=\\\"skeleton-card-content\\\">\\n        <ion-label>\\n          <h3>\\n            <ion-skeleton-text animated style=\\\"width: 100%\\\"></ion-skeleton-text>\\n          </h3>\\n          <p>\\n            <ion-skeleton-text animated style=\\\"width: 100%\\\"></ion-skeleton-text>\\n          </p>\\n          <p>\\n            <ion-skeleton-text animated style=\\\"width: 100%\\\"></ion-skeleton-text>\\n          </p>\\n        </ion-label>\\n      </ion-card-content>\\n    </ion-card>\\n  </div>\\n</ion-content>\\n\"","module.exports = \".noPadding {\\n  padding-left: 0;\\n  padding-top: 10px; }\\n\\n.loadMore {\\n  max-width: 300px;\\n  --border-radius: 20px;\\n  margin: auto;\\n  margin-bottom: 50px;\\n  margin-top: 25px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy92aXNod2FuYXRoYmFkaWdlci9Eb2N1bWVudHMvYXBwcy9zbC11bm5hdGkvdW5uYXRpLWZlYi9zbC11bm5hdGktbW9iaWxlL3NyYy9hcHAvbm90aWZpY2F0aW9ucy9ub3RpZmljYXRpb25zLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQWU7RUFDZixpQkFBaUIsRUFBQTs7QUFFbkI7RUFDRSxnQkFBZ0I7RUFDaEIscUJBQWdCO0VBQ2hCLFlBQVk7RUFDWixtQkFBbUI7RUFDbkIsZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9ub3RpZmljYXRpb25zL25vdGlmaWNhdGlvbnMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5vUGFkZGluZyB7XG4gIHBhZGRpbmctbGVmdDogMDtcbiAgcGFkZGluZy10b3A6IDEwcHg7XG59XG4ubG9hZE1vcmUge1xuICBtYXgtd2lkdGg6IDMwMHB4O1xuICAtLWJvcmRlci1yYWRpdXM6IDIwcHg7XG4gIG1hcmdpbjogYXV0bztcbiAgbWFyZ2luLWJvdHRvbTogNTBweDtcbiAgbWFyZ2luLXRvcDogMjVweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { NotificationCardService } from '../notification-card/notification.service';\nimport { ApiProvider } from '../api/api';\nimport { Storage } from '@ionic/storage';\nimport * as jwt_decode from \"jwt-decode\";\nimport { UpdateProfileService } from '../update-profile/update-profile.service';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.page.html',\n  styleUrls: ['./notifications.page.scss'],\n})\nexport class NotificationsPage implements OnInit {\n  notifications = [];\n  page = 1;\n  limit = 20;\n  totalCount;\n  public showSkeleton: boolean = false;\n  back = \"/project-view/home\";\n  public skeletons = [{}, {}, {}, {}, {}, {}];\n  constructor(public notificationCardService: NotificationCardService,\n    public api: ApiProvider,\n    public storage: Storage,\n    public updateProfileService: UpdateProfileService) { }\n  ngOnInit() {\n    //this.fetchAllNotifications();\n  }\n  ionViewDidEnter() {\n    this.fetchAllNotifications();\n  }\n  fetchAllNotifications(infinateScrollRefrnc?) {\n    this.storage.get('userTokens').then(data => {\n      this.api.refershToken(data.refresh_token).subscribe((data: any) => {\n        let parsedData = JSON.parse(data._body);\n        if (parsedData && parsedData.access_token) {\n          let userTokens = {\n            access_token: parsedData.access_token,\n            refresh_token: parsedData.refresh_token,\n          };\n          this.storage.set('userTokens', userTokens).then(usertoken => {\n            this.showSkeleton = true;\n            this.notificationCardService.getAllNotifications(userTokens.access_token, this.page, this.limit).subscribe((success: any) => {\n              this.totalCount = success.result.count;\n              // this.notificationCardService.getCount(this.totalCount);\n              this.notifications = this.notifications.concat(success.result.data);\n              this.showSkeleton = false;\n            }, error => {\n              this.showSkeleton = false;\n            })\n          }, error => {\n          })\n        }\n      })\n    })\n  }\n\n  loadMore() {\n    this.page++;\n    this.fetchAllNotifications()\n  }\n  doInfinite(infiniteScroll) {\n    if ((this.page * this.limit) < this.totalCount) {\n      this.page++\n      this.fetchAllNotifications(infiniteScroll)\n    } else {\n      infiniteScroll.enable(false)\n    }\n  }\n}\n"],"sourceRoot":""}